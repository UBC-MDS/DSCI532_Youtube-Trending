# It filters the observations and returns all matching combinations in x and y.
Movies %>%
left_join(Companies)
Companies %>%
left_join(Movies) # all combinations between x and y can be seen by "Disney" appearing twice for "The Avengers" and "Moana"
Companies %>%
right_join(Movies)
Companies %>%  # Boruto is removed
left_join(Movies) # all combinations between x and y can be seen by "Disney" appearing twice for "The Avengers" and "Moana"
## Left_join is the most common join. It retains the original dataframe and adds column variables from the second dataset.
# It filters the observations and returns all matching combinations in x and y.
Movies %>%  # WB is removed
left_join(Companies)
# full_join keeps all x and y rows and keeps all column variables
Movies %>%
full_join(Companies)
Companies %>%
full_join(Movies)
# full_join keeps all x and y rows and keeps all column variables
Movies %>%
full_join(Companies)
Companies %>% # Note switching only reorders content of table
full_join(Movies)
# full_join keeps all x and y rows and keeps all column variables
Movies %>%
full_join(Companies)
## inner_join is exactly the same as left_join except it only keeps the x and y matches in both tables. It does not retain observations in original table that do not match
Movies %>%
inner_join(Companies)
Companies %>%
inner_join(Movies)
# semi_join retains observation x that are matched in y, without adding the new variables.
Movies %>%
semi_join(Companies)
Companies %>%
semi_join(Movies)
# semi_join retains observation x that are matched in y, without adding the new variables. Observations will not repeat.
Movies %>%
semi_join(Companies) # Boruto is gone
# anti_join retains the observations in x that is not in y
Movies %>%
anti_join(Companies) # Boruto is alive!
Companies %>%
anti_join(Movies)
head(airports)
worst_dest <- tribble(
~"dest",  ~"avg_arr_delay", ~"sd_arr_delay",
#-----|-----------------|---------------
"RIC",            20.1,         53.8,
"CVG",            15.4,         55.1,
"MCI",            14.5,         52.4,
"MKE",            14.2,         49.9,
"GSO",            14.1,         48.6,
"IAD",            13.9,         51.1,
"DAY",            12.7,         47.7,
"SDF",            12.7,         45.8,
"MDW",            12.4,         47.0,
"JAX",            11.8,         44.1
#The variable `dest` refers to the destination;
#The variable `avg_arr_delay` refers to the average of arrival delay of `dest`
#The variable `sd_arr_delay` refers to the standard deviation of average delay of `dest`;
)
airports %>%
select(name, lat, lon) %>%
right_join(worst_dest)
head(airports)
airports %>%
select(faa, name, lat, lon) %>%
right_join(worst_dest, by = c("faa", "dest"))
airports %>%
select(faa, name, lat, lon) %>%
right_join(worst_dest, by = c("faa", "dest"))
airports %>%
select(faa, name, lat, lon)
airports %>%
select(faa, name, lat, lon) %>%
right_join(worst_dest, by = c("faa" = "dest"))
match(worst_dest$dest, airports$faa)
airports$lat[match(worst_dest$dest, airports$faa)]
airports %>%
select(faa, name, lat, lon) %>%
right_join(worst_dest, by = c("faa" = "dest"))
airports %>%
select(faa, name, lat, lon) %>%
right_join(worst_dest, by = c("faa" = "dest"))
worst_dest <- airports %>%
select(faa, name, lat, lon) %>%
right_join(worst_dest, by = c("faa" = "dest"))
head(worst_dest)
head(flights)
head(worst_dest)
worst_dest %>%
left_join(flights, by = c(faa = dest))
worst_dest %>%
left_join(flights, by = c("faa" = "dest"))
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
count(faa)
worst_dest %>%
left_join(flights, by = c("faa" = "dest"))
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
count(faa)
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
count(faa, sort = TRUE)
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
count(faa, sort = FALSE)
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
count(faa, sort = TRUE)
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
add.count(faa, sort = TRUE)
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
add_count(faa, sort = TRUE)
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
group_by(faa) %>%
tally()
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
group_by(faa)
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
group_by(faa) %>%
summarise(mutate(count = n()))
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
count(faa)
n_flights <- worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
count(n_flights = faa)
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
count(n_flights = faa)
n_flights <- worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
count(faa)
n_flights <- worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
count(faa)
worst_dest %>%
left_join(n_flights)
worst_dest %>%
left_join(flights, by = c("faa" = "dest")) %>%
count(faa)
worst_dest %>%
left_join(n_flights) %>%
rename(n_flights = n)
worst_dest <- worst_dest %>%
left_join(n_flights) %>%
rename(n_flights = n)
flights %>%
semi_join(worst_dest)
flights %>%
semi_join(worst_dest, by = c("dest" = "faa"))
flights %>%
inner_join(worst_dest, by = c("dest", "faa"))
flights %>%
inner_join(worst_dest, by = c("dest" = "faa"))
# inner_join is exactly the same as left_join except it only keeps the x and y matches in both tables. It does not retain observations in original table that do not match
Movies %>%
inner_join(Companies) # Boruto movie is gone because "Toho" is not in "Studio"
Companies %>%
inner_join(Movies) # note inner_join also keeps all combinations of x and y as "Disney" is repeated again
# inner_join is exactly the same as left_join except it only keeps the x and y matches in both tables. It does not retain observations in original table that do not match
Movies %>%
inner_join(Companies) # Boruto movie is gone because "Toho" is not in "Studio"
Companies %>%
inner_join(Movies) # note inner_join also keeps all combinations of x and y as "Disney" is repeated again
# inner_join is exactly the same as left_join except it only keeps the x and y matches in both tables. It does not retain observations in original table that do not match
Movies %>%
inner_join(Companies) # Boruto movie is gone because "Toho" is not in "Studio"
Companies %>%
inner_join(Movies) # note order does not matter in inner_join
worst_dest %>%
select(faa, avg_arr_delay, sd_arr_delay) %>%
inner_join(flights, by = c("dest" = "faa"))
worst_dest %>%
select(faa, avg_arr_delay, sd_arr_delay) %>%
inner_join(flights, by = c("faa" = "dest"))
head(planes)
flights %>%
select(tailnum, distance)
flights %>%
select(tailnum, distance) %>%
arrange(desc(distance))
flights %>%
select(tailnum, distance) %>%
arrange(desc(distance)) %>%
count(tailnum)
flights %>%
select(tailnum, distance) %>%
arrange(desc(distance))
flights %>%
select(tailnum, distance) %>%
filter(max(distance))
flights %>%
select(tailnum, distance) %>%
filter(distance = max(distance))
flights %>%
select(tailnum, distance) %>%
filter(distance == max(distance))
flights %>%
select(tailnum, distance) %>%
filter(distance == max(distance)) %>%
count(tailnum)
flights %>%
select(tailnum, distance) %>%
filter(distance == max(distance)) %>%
n_distinct(tailnum)
flights %>%
select(tailnum, distance) %>%
filter(distance == max(distance)) %>%
n_distinct()
flights %>%
select(tailnum, distance) %>%
filter(distance == max(distance)) %>%
duplicated()
flights %>%
select(tailnum, distance) %>%
filter(distance == max(distance)) %>%
count()
flights %>%
select(tailnum, distance) %>%
filter(distance == max(distance)) %>%
count(tailnum)
flights %>%
select(tailnum, distance) %>%
filter(distance == max(distance)) %>%
count(tailnum) %>%
select(-n) %>%
left_join(planes)
flights %>%
select(tailnum, distance) %>%
filter(distance == max(distance)) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum:seats, -engines)
flights %>%
select(tailnum, distance) %>%
filter(distance == max(distance)) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum:seats, -engines, -n)
flights %>%
select(tailnum)
flights %>%
select(tailnum) %>%
count(tailnum)
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer)
competitor <- flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer)
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer)
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer) %>%
na.omit
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer) %>%
na.omit()
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer) %>%
na.omit() %>%
arrange(desc(n))
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer) %>%
na.omit() %>%
group_by(manufacturer) %>%
count(manufacturer)
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer) %>%
na.omit() %>%
group_by(manufacturer)
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer) %>%
na.omit() %>%
group_by(manufacturer) %>%
mutate(n*count(manufacturer))
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer) %>%
na.omit() %>%
group_by(manufacturer)
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer) %>%
na.omit() %>%
group_by(manufacturer) %>%
mutate(sum(n))
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer) %>%
na.omit() %>%
group_by(manufacturer) %>%
summarise(sum(n))
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer) %>%
na.omit() %>%
group_by(manufacturer) %>%
summarise(total_flights = sum(n)) %>%
arrange(desc(total_flights))
gapminder %>%
group_by(continent, year) %>%
summarise(life_expectancy = mean(lifeExp), gdpPercap = mean(gdpPercap)) %>%
ggplot() + geom_line(aes(year, gdpPercap, color = continent)) + labs(color = "continent")
ggplot() + geom_line(aes(year, gdpPercap, color = fct_reorder2(continent, year, life_expectancy)) + labs(color = "continent")
ggplot() + geom_line(aes(year, gdpPercap, color = fct_reorder2(continent, year, life_expectancy)) + labs(color = "continent")
group_by(continent, year) %>%
gapminder %>%
group_by(continent, year) %>%
summarise(life_expectancy = mean(lifeExp), gdpPercap = mean(gdpPercap)) %>%
ggplot() + geom_line(aes(year, gdpPercap, color = fct_reorder2(continent, year, life_expectancy)) + labs(color = "continent")
ggplot() + geom_line(aes(year, gdpPercap, color = fct_reorder2(continent, year, life_expectancy) + labs(color = "continent")
gapminder %>%
gapminder %>%
group_by(continent, year) %>%
summarise(life_expectancy = mean(lifeExp), gdpPercap = mean(gdpPercap)) %>%
ggplot() + geom_line(aes(year, gdpPercap, color = fct_reorder2(continent, year, life_expectancy))) + labs(color = "continent")
gapminder %>%
group_by(continent, year) %>%
summarise(life_expectancy = mean(lifeExp), gdpPercap = mean(gdpPercap)) %>%
ggplot() + geom_line(aes(year, gdpPercap, color = fct_reorder2(continent, year, life_expectancy)))
+ labs(color = "continent")
gapminder %>%
group_by(continent, year) %>%
summarise(life_expectancy = mean(lifeExp), gdpPercap = mean(gdpPercap)) %>%
ggplot() + geom_line(aes(year, gdpPercap, color = fct_reorder2(continent, year, life_expectancy))) + labs(color = "continent")
# w/ factors
gapminder %>%
group_by(continent, year) %>%
summarise(mean_life_exp = mean(lifeExp)) %>%
ggplot(aes(year, mean_life_exp)) +
geom_line(aes(color = fct_reorder2(continent, year, mean_life_exp))) + labs(color = "continent")
# w/ factors
gapminder %>%
group_by(continent, year) %>%
summarise(mean_life_exp = mean(lifeExp)) %>%
ggplot(aes(year, mean_life_exp)) +
geom_line(aes(color = fct_reorder2(continent, year, mean_life_exp))) + labs(color = "Continent") + xlab("Mean Life Expectancy")
# w/ factors
gapminder %>%
group_by(continent, year) %>%
summarise(mean_life_exp = mean(lifeExp)) %>%
ggplot(aes(year, mean_life_exp)) +
geom_line(aes(color = fct_reorder2(continent, year, mean_life_exp))) + labs(color = "Continent") + ylab("Mean Life Expectancy")
gapminder %>%
group_by(continent, year) %>%
summarise(life_expectancy = mean(lifeExp), gdpPercap = mean(gdpPercap)) %>%
ggplot() + geom_line(aes(year, gdpPercap, color = fct_reorder2(continent, gdpPercap, life_expectancy))) + labs(color = "continent")
gapminder %>%
group_by(continent, year) %>%
summarise(life_expectancy = mean(lifeExp), gdpPercap = mean(gdpPercap)) %>%
ggplot() + geom_line(aes(year, gdpPercap, color = fct_reorder2(year, gdpPercap, life_expectancy))) + labs(color = "continent")
continent
continent
gapminder %>%
group_by(continent, year) %>%
summarise(life_expectancy = mean(lifeExp), gdpPercap = mean(gdpPercap)) %>%
ggplot() + geom_line(aes(year, gdpPercap, color = fct_reorder2(continent, gdpPercap, life_expectancy))) + labs(color = "continent")
gapminder %>%
group_by(continent, year) %>%
summarise(life_expectancy = mean(lifeExp), gdpPercap = mean(gdpPercap)) %>%
ggplot() + geom_line(aes(year, gdpPercap, color = continent)) + labs(color = "continent")
gapminder %>%
group_by(continent, year) %>%
summarise(life_expectancy = mean(lifeExp), gdpPercap = mean(gdpPercap)) %>%
ggplot() + geom_line(aes(year, gdpPercap, color = fct_reorder2(continent, gdpPercap, life_expectancy))) + labs(color = "continent")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
library(gapminder)
library(tidyverse)
library(forcats)
library(nycflights13)
flights %>%
select(tailnum) %>%
count(tailnum) %>%
left_join(planes) %>%
select(tailnum, n ,manufacturer) %>%
na.omit() %>%
group_by(manufacturer) %>%
summarise(total_flights = sum(n)) %>%
arrange(desc(total_flights))
# Boeing's biggest competitor looks to be Airbus, which has actually flown more flights in NYC in 2013 than Boeing itself.
flights %>%
left_join(planes, by='tailnum') %>%
group_by(manufacturer) %>%
summarise(num_tailnums=n_distinct(tailnum)) %>%
arrange(desc(num_tailnums)) %>%
na.omit()
install.packages("RSQLite")
?count()
?count
library(tidyverse)
?count
library(RSQLite)
my_con = dbConnect(SQLite(), "drinks.db")
library(RSQLite)
knitr::include_graphics("../results/EDA_pokemonCount.png")
knitr::include_graphics("../results/EDA_pokemonCount.png")
sessionInfo()
sessionInfo()
sessionInfo()
packageVersion("maps")
packageVersion("tidyverse")
packageVersion("here")
pf(1.5, df1 = 5, df2 = 5)
pf(1.5, df1 = 5, df2 = 100)
pf(10, df1 = 5, df2 = 100)
pf(10, df1 = 5, df2 = 100, lower.tail = TRUE)
pf(10, df1 = 5, df2 = 100, lower.tail = TRUE)
pf(10, df1 = 5, df2 = 100)
pf(10, df1 = 5, df2 = 100, lower.tail = TRUE)
seq(-4,4,1)
ggplot(tibble(x = seq(-1,5,0.1)), aes(x)) +
stat_function(fun = df, args = list(df1 = 1, df2 = 1))
library(tidyverse)
ggplot(tibble(x = seq(-1,5,0.1)), aes(x)) +
stat_function(fun = df, args = list(df1 = 1, df2 = 1))
ggplot(tibble(x = seq(-1,5,0.1)), aes(x)) +
stat_function(fun = df, args = list(df1 = 1, df2 = 1)) +
stat_function(fun = df, args = list(df1 = 1, df2 = 20))
ggplot(tibble(x = seq(-1,5,0.1)), aes(x)) +
stat_function(fun = df, args = list(df1 = 1, df2 = 1)) +
stat_function(fun = df, args = list(df1 = 1, df2 = 20), color = "red")
ggplot(tibble(x = seq(-1,5,0.1)), aes(x)) +
stat_function(fun = df, args = list(df1 = 1, df2 = 1)) +
stat_function(fun = df, args = list(df1 = 1, df2 = 20), color = "red", geom = "line")
ggplot(tibble(x = seq(-1,10,0.1)), aes(x)) +
stat_function(fun = df, args = list(df1 = 1, df2 = 1)) +
stat_function(fun = df, args = list(df1 = 1, df2 = 20), color = "red")
ggplot(tibble(x = seq(-1,10,0.1)), aes(x)) +
stat_function(fun = df, args = list(df1 = 1, df2 = 1)) +
stat_function(fun = df, args = list(df1 = 1, df2 = 20), color = "red") +
stat_function(fun = df, args = list(df1 = 20, df2 = 1), color = "blue")
shiny::runApp('Data_Science/BCL')
runApp('Data_Science/BCL')
runApp('Data_Science/BCL')
runApp('Data_Science/BCL')
runApp('Data_Science/BCL')
runApp('Data_Science/BCL')
shiny::runApp('Data_Science/MDS/DSCI532_Viz-2/DSCI532_Youtube-Trending')
runApp('Data_Science/MDS/DSCI532_Viz-2/DSCI532_Youtube-Trending')
setwd("~/Data_Science/MDS/DSCI532_Viz-2/DSCI532_Youtube-Trending")
shiny::runApp()
install.packages(tidytext)
install.packages("tidytext")
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='jackattackyang', token='422A6032897311AF1AD94871FAD64EB6', secret='yLkgtuEgI99ZyIV1+1fg2TghDRcN9AfbWm5O6rQK')
library(rsconnect)
rsconnect::deployApp('C:\Users\Jack\Documents\Data_Science\MDS\DSCI532_Viz-2\DSCI532_Youtube-Trending\app.R')
setwd("~/Data_Science/MDS/DSCI532_Viz-2/DSCI532_Youtube-Trending")
rsconnect::deployApp('app.R')
deployApp()
shiny::runApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
deployApp()
