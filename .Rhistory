select(publish_time, category)
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(days(publish_time)))
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(wday(publish_time)))
library(lubridate)
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(wday(publish_time)))
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(wday(publish_time, label = TRUE)))
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(hour(publish_time, label = TRUE)))
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(time(publish_time, label = TRUE)))
df %>%
select(publish_time, category) %>%
mutate(hour = hour(publish_time))
df %>%
select(publish_time, category) %>%
mutate(hours = hour(publish_time),
minutes = minute(publish_time),
seconds = second(publish_time),
time = make_datetime(hour = hours, min = minutes, sec = seconds))
df %>%
select(publish_time, category) %>%
mutate(hours = hour(publish_time),
minutes = minute(publish_time),
seconds = second(publish_time),
time = make_datetime(hour = hours, min = minutes, sec = seconds)) %>%
ggplot() + geom_freqpoly(aes(time))
df %>%
select(publish_time, category) %>%
mutate(hours = hour(publish_time),
minutes = minute(publish_time),
seconds = second(publish_time),
time = make_datetime(hour = hours, min = minutes, sec = seconds)) %>%
ggplot() + geom_freqpoly(aes(time)) +
scale_x_datetime(date_breaks = "3 hours", date_labels = "%H:%M")
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(wday(publish_time, label = TRUE)))
df %>%
select(publish_time, category) %>%
mutate(hours = hour(publish_time),
minutes = minute(publish_time),
seconds = second(publish_time),
time = make_datetime(hour = hours, min = minutes, sec = seconds)) %>%
ggplot() + geom_freqpoly(aes(time)) +
scale_x_datetime(date_breaks = "3 hours", date_labels = "%H:%M")
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(mday(publish_time, label = TRUE)))
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(mday(publish_time)))
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(month(publish_time)))
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(month(publish_time, label=TRUE)))
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(mday(publish_time, label=TRUE)))
df %>%
select(publish_time, category) %>%
ggplot() + geom_freqpoly(aes(mday(publish_time, label=TRUE)))
df$category <- df$category %>% as_factor()
source('~/Data_Science/MDS/DSCI532_Viz-2/DSCI532_Youtube-Trending/cleaning.R', echo=TRUE)
df$category <- df$category %>% as_factor()
saveRDS(df, file="data/clean_df.rds")
shiny::runApp('C:/Users/Jack/Desktop/Trend_Now')
setwd("~/Data_Science/MDS/DSCI532_Viz-2/DSCI532_Youtube-Trending")
runApp('C:/Users/Jack/Desktop/Trend_Now')
df <- readRDS("data/clean_df.rds")
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
df <- readRDS("data/clean_df.rds")
ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$distPlot <- renderPlot({
# generate bins based on input$bins from ui.R
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
# Run the application
shinyApp(ui = ui, server = server)
runApp('~/Data_Science/BCL')
runApp('C:/Users/Jack/Desktop/Trend_Now')
library(tidyverse)
library(lubridate)
library(scales)
library(shiny)
runApp('C:/Users/Jack/Desktop/Trend_Now')
df <- read_rds("data/clean_df.rds")
runApp('C:/Users/Jack/Desktop/Trend_Now')
setwd("~/Data_Science/MDS/DSCI532_Viz-2/DSCI532_Youtube-Trending")
df <- read_rds("data/clean_df.rds")
runApp('C:/Users/Jack/Desktop/Trend_Now')
df %>% head()
getwd()
df <- read_rds("C:/Users/Jack/Documents/Data_Science/MDS/DSCI532_Viz-2/DSCI532_Youtube-Trending/data/clean_df.rds")
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
df <- read_rds("C:/Users/Jack/Documents/Data_Science/MDS/DSCI532_Viz-2/DSCI532_Youtube-Trending/data/clean_df.rds")
runApp('~/Data_Science/BCL')
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
?aes_string
runApp('C:/Users/Jack/Desktop/Trend_Now')
my_input <- !!rlang::sym(str_to_lower(input$engagement))
runApp('C:/Users/Jack/Desktop/Trend_Now')
df %>%
group_by(category) %>%
summarise_(my_input = sum(input$engagement), n = n(), avg = my_input/n) %>%
ggplot() +
geom_col(aes(fct_reorder(category, avg), avg)) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
rlang::sym("hi")
runApp('C:/Users/Jack/Desktop/Trend_Now')
df %>%
group_by(category) %>%
summarise_(thing = sum(like), n = n(), avg = thing/n) %>%
ggplot() +
geom_col(aes(fct_reorder(category, avg), avg)) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
runApp('C:/Users/Jack/Desktop/Trend_Now')
df %>%
head()
df %>%
group_by(category) %>%
summarise_(thing = sum(views), n = n(), avg = thing/n)
# my_input <- !!rlang::sym(str_to_lower(input$engagement))
df %>%
group_by(category) %>%
summarise_(thing = sum(likes), n = n(), avg = thing/n) %>%
ggplot() +
geom_col(aes(fct_reorder(category, avg), avg)) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
# my_input <- !!rlang::sym(str_to_lower(input$engagement))
df %>%
group_by(category) %>%
summarise(likes = sum(likes), n = n(), avg = likes/n) %>%
ggplot() +
geom_col(aes(fct_reorder(category, avg), avg)) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
runApp('C:/Users/Jack/Desktop/Trend_Now')
df %>%
group_by(category) %>%
summarise(likes = sum(views), n = n(), avg = likes/n) %>%
ggplot() +
geom_col(aes(fct_reorder(category, avg), avg)) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
df %>%
group_by(category) %>%
summarise(likes = sum(views), n = n(), avg = likes/n)
df %>%
group_by(category) %>%
summarise(likes = sum(views, na.rm=TRUE), n = n(), avg = likes/n) %>%
ggplot() +
geom_col(aes(fct_reorder(category, avg), avg)) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
df %>%
group_by(category) %>%
summarise(likes = sum(views))
df %>%
group_by(category) %>%
summarise(likes = sum(as.numeric(views)))
integer.max()
df %>%
group_by(category) %>%
summarise(likes = sum(as.numeric(views)), n = n(), avg = likes/n) %>%
ggplot() +
geom_col(aes(fct_reorder(category, avg), avg)) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
df %>%
select(Nonprofits)
df %>%
select(category)
df %>%
select(category, views, likes, dislikes)
df %>%
select(category, views, likes, dislikes) %>%
filter(category %in% "Nonprofit & Activism")
df %>%
select(category, views, likes, dislikes) %>%
filter(category =="Nonprofit & Activism")
df %>%
select(category, views, likes, dislikes) %>%
filter(category %in% "Nonprofits & Activism")
df %>%
select(category, views, likes, dislikes) %>%
filter(category %in% "Nonprofits & Activism") %>%
arrange(views)
df %>%
select(category, views, likes, dislikes) %>%
filter(category %in% "Nonprofits & Activism") %>%
arrange(desc(views))
runApp('C:/Users/Jack/Desktop/Trend_Now')
df %>%
group_by(category) %>%
summarise(likes = sum(as.numeric(views)), n = n(), avg = likes/n) %>%
ggplot() +
geom_boxplot(aes(fct_reorder(category, avg), avg)) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
df %>%
group_by(category) %>%
summarise(likes = sum(as.numeric(views)), n = n(), avg = likes/n) %>%
ggplot() +
geom_boxplot(aes(fct_reorder(category, avg))) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
df %>%
geom_boxplot(aes(fct_reorder(category, avg))) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
df %>%
geom_boxplot(aes(fct_reorder(category, avg), likes)) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
df %>%
ggplot() +
geom_boxplot(aes(fct_reorder(category, avg), likes)) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
df %>%
ggplot() +
geom_boxplot(aes(fct_reorder(category, likes), likes)) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
df %>%
ggplot() +
geom_boxplot(aes(fct_reorder(category, likes), likes)) +
ylim(,100000)
df %>%
ggplot() +
geom_boxplot(aes(fct_reorder(category, likes), likes)) +
ylim(0,100000)
df %>%
ggplot() +
geom_boxplot(aes(fct_reorder(category, likes), likes)) +
ylim(0,100000) +
scale_y_continuous(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
df %>%
ggplot() +
geom_boxplot(aes(fct_reorder(category, likes), likes)) +
scale_y_log10(labels = comma, ) +
labs(x="", y="Likes per Video") +
coord_flip()
df %>%
ggplot() +
geom_boxplot(aes(fct_reorder(category, likes), likes)) +
scale_y_log10(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
df %>%
ggplot() +
geom_boxplot(aes(fct_reorder(category, views), views)) +
scale_y_log10(labels = comma) +
labs(x="", y="Likes per Video") +
coord_flip()
df %>%
group_by(category) %>%
summarise(likes = sum(as.numeric(views)), n = n(), avg = likes/n)
df %>%
group_by(category) %>%
count()
df %>%
group_by(category) %>%
summarise(likes = sum(as.numeric(views)), n = n(), avg = likes/n)
runApp('C:/Users/Jack/Desktop/Trend_Now')
df %>% names()
df %>% View()
runApp('C:/Users/Jack/Desktop/Trend_Now')
df %>%
select(publish_time, category) %>%
ggplot() + geom_freqpoly(aes(mday(publish_time, label=TRUE)))
df %>%
select(publish_time, category) %>%
ggplot() + geom_freqpoly(aes(mday(publish_time)))
df %>%
select(publish_time, category) %>%
ggplot() + geom_bar(aes(mday(publish_time)))
runApp('C:/Users/Jack/Desktop/Trend_Now')
runApp('C:/Users/Jack/Desktop/Trend_Now')
df$category
df$category %>% unique()
runApp('C:/Users/Jack/Desktop/Trend_Now')
df$category %>% unique() %>% fct_inorder()
df$category %>% unique() %>% order()
df$category %>% unique() %>% order(names())
order(df$category)
order(df$category %>% unique())
order(df$category %>% unique() %>% names())
order(df$category %>% levels())
order(df$category %>% as.character())
order(df$category %>% %>% unique() %>% as.character())
colnames(df)
colnames(df$category)
colnames(df$tile)
colnames(df$title)
sort(df$category)
sort(df$category %>% unique())
order(df$category %>% unique())
order(sort(df$category %>% unique()))
levels(df$category)
choices <- paste("Select All", df$category %>% unique())
choices
choices <- c("Select All", df$category %>% unique())
choices
choices <- c("Select All", levels(df$category))
choices
df %>%
select(category) %>%
filter(choices[-1])
df %>%
select(category) %>%
filter(category %in% choices[-1])
runApp('C:/Users/Jack/Desktop/Trend_Now')
df$category %>%
count()
df$category %>% as.character()
df$category %>% as.character() %>%
count()
df %>% select(category) %>%
as.character() %>%
count()
df %>% select(category) %>%
count()
df %>% select(category) %>%
count(unique())
df %>% select(category) %>% unfactor() %>%
count(unique())
df %>% select(category) %>% fct_drop() %>%
count(unique())
df %>% select(category) %>% droplevels() %>%
count(unique())
df %>% select(category) %>% droplevels() %>%
count()
df %>% select(category) %>% fct_drop() %>%
count()
df %>% select(category)
df %>% select(category) %>%
fct_drop()
df$category %>%
fct_drop()
df$category %>%
fct_drop() %>%
count()
df$category %>%
fct_drop() %>%
levels()
df %>%
select(category) %>%
mutate(category = fct_drop(category))
df %>%
select(category) %>%
mutate(category = as.character(category))
df %>%
select(category) %>%
mutate(category = as.character(category)) %>%
count()
df %>%
select(category) %>%
mutate(category = as.character(category)) %>%
count(category)
df %>%
select(category) %>%
count(category)
df %>%
select(category) %>%
mutate(category = as.character(category)) %>%
count(category) %>%
map(category)
df %>%
select(category) %>%
mutate(category = as.character(category)) %>%
count(category) %>%
map()
choices_df <- df %>%
select(category) %>%
mutate(category = as.character(category)) %>%
count(category)
choices_df[["n"]]
choices_df[["category"],["n"]]
choices_df[c("category", "n")]
as.vector(choices_df[c("category", "n")])
as.vector(as.matrix(choices_df[c("category", "n")]))
paste(choices_df[["category"]], choices_df[["n"]])
paste(choices_df[["category"]], (choices_df[["n"]]))
paste(choices_df[["category"]], "(", choices_df[["n"]], ")")
paste0(choices_df[["category"]], "(", choices_df[["n"]], ")")
paste0(choices_df[["category"]], " (", choices_df[["n"]], ")")
choices <- paste0(choices_df[["category"]], " (", choices_df[["n"]], ")")
choices <- c("Select All", choices)
choices
runApp('C:/Users/Jack/Desktop/Trend_Now')
str_subset("abc","ab")
runApp('C:/Users/Jack/Desktop/Trend_Now')
choices_num
choices_num <- c("Select All", choices[-1])
choices_num
runApp('C:/Users/Jack/Desktop/Trend_Now')
choices_num
shiny::runApp('C:/Users/Jack/Desktop/Trend_Now')
df <- read_rds("C:/Users/Jack/Documents/Data_Science/MDS/DSCI532_Viz-2/DSCI532_Youtube-Trending/data/clean_df.rds")
library(tidyverse)
library(lubridate)
library(scales)
library(shiny)
df <- read_rds("C:/Users/Jack/Documents/Data_Science/MDS/DSCI532_Viz-2/DSCI532_Youtube-Trending/data/clean_df.rds")
choices_df <- df %>%
select(category) %>%
mutate(category = as.character(category)) %>%
count(category)
choices_num <- paste0(choices_df[["category"]], " (", choices_df[["n"]], ")")
choices_num <- c("Select All", levels(df$category))
runApp('C:/Users/Jack/Desktop/Trend_Now')
choices_num
choices_num <- c("Select All", choices_num)
choices_num
choices_df <- df %>%
select(category) %>%
mutate(category = as.character(category)) %>%
count(category)
choices_num <- paste0(choices_df[["category"]], " (", choices_df[["n"]], ")")
choices_num <- c("Select All", choices_num)
choices_num
choices_num[2]
choices[2]
choices <- c("Select All", levels(df$category))
choices[2]
choices <- choices_df[["category"]]
choices[2]
choices <- c("Select All", choices_df[["category"]])
choices[2]
choices_num
choices_num[2]
str_subset(choices, choices_num)
str_subset(choices[2], choices_num[2])
str_subset(choices_num[2], choices[2])
str_extract(choices_num[2], choices[2])
str_extract(choices[2], choices_num[2])
str_extract(choices_num[2], choices[2])
runApp('C:/Users/Jack/Desktop/Trend_Now')
shiny::runApp()
runApp()
